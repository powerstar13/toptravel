<?xml version = "1.0" encoding = "UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    @fileName    : CulturePerfMapper.xml
    @author      : 임형진
    @description : 문화 영역을 DB에 저장하거나 DB에서 view단으로 출력하기 위한 매퍼
    @lastUpdate  : 2019-05-09
-->

<!-- 이 XML의 구조대로 구현될 클래스의 이름 => Impl클래스를 대체한다. -->
<mapper namespace = "CulturePerformanceMapper">
    <!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
    <resultMap id = "culturePerformance" type = "project.spring.travel.model.CulturePerformance">
	    <!-- Beans의 멤버변수(property)이름과
	        대상 테이블의 컬럼(column)을 연결한다.
	    -->
	    <result property="cultureId" column="cultureId"/>
        <result property="seq" column="seq"/>
        <result property="startDate" column="startDate"/>
        <result property="endDate" column="endDate"/>
        <result property="title" column="title"/>
        <result property="place" column="place"/>
        <result property="realmName" column="realmName"/>
        <result property="area" column="area"/>
        <result property="thumbnail" column="thumbnail"/>
        <result property="gpsX" column="gpsX"/>
        <result property="gpsY" column="gpsY"/>
        <result property="subTitle" column="subTitle"/>              
		<result property="price" column="price"/>                    
		<result property="contents1" column="contents1"/>            
		<result property="contents2" column="contents2"/>            
		<result property="url" column="url"/>                        
		<result property="phone" column="phone"/>                    
		<result property="imgUrl" column="imgUrl"/>                  
		<result property="placeUrl" column="placeUrl"/>              
		<result property="placeAddr" column="placeAddr"/>
       <result property="limitStart" column="limitStart"/>
       <result property="listCount" column="listCount"/>
       <result property="cultureLike" column="cultureLike"/>
    </resultMap>

    <!-- ===== 문화 공연 정보 업데이트 ===== -->
    <update id = "updateCulturePerformance"
        parameterType = "project.spring.travel.model.CulturePerformance">
        <!-- "#{변수명}" 으로 표시된 곳에 Beans의 멤버변수가 치환된다. -->
        Update culture_perf 
        Set 
              
            startDate = #{startDate}, 
            endDate = #{endDate}, 
            place = #{place}, 
            realmName = #{realmName},
            title = #{title},
            area = #{area}, 
            thumbnail = #{thumbnail}, 
            gpsX = #{gpsX}, 
            gpsY = #{gpsY},
            subTitle = #{subTitle},
            price = #{price},
            contents1 = #{contents1},
            contents2 = #{contents2},
            url = #{url},
            phone = #{phone},
            imgUrl = #{imgUrl},
            placeUrl = #{placeUrl},
            placeAddr = #{placeAddr}
                        
        Where seq = #{seq}
    </update>
    
    <!-- ===== 문화 공연 정보 저장 ===== -->
    <insert id = "insertCulturePerformance"
            parameterType = "project.spring.travel.model.CulturePerformance"
            useGeneratedKeys = "true"
            keyProperty = "cultureId">
        <!-- "#{변수명}" 으로 표시된 곳에 Beans의 멤버변수가 치환된다. -->
        Insert Into culture_perf (
            seq, startDate, endDate, title, place, realmName, area, thumbnail, 
            gpsX, gpsY, subTitle, price, contents1, contents2, url, phone, imgUrl, placeUrl, placeAddr, cultureLike
        ) Values (
            #{seq}, #{startDate}, #{endDate}, #{title}, #{place}, #{realmName}, #{area}, #{thumbnail}, 
            #{gpsX}, #{gpsY}, #{subTitle}, #{price}, #{contents1}, #{contents2}, #{url}, #{phone}, #{imgUrl}, #{placeUrl}, #{placeAddr}, 0
        )
    </insert>
    
    <!-- 문화 공연 정보 목록 조회 -->
    
    <select id="selectCulturePerformanceList" parameterType="project.spring.travel.model.CulturePerformance"
    resultMap="culturePerformance">
    	SELECT 
    		cultureId, seq,  place, realmName,  thumbnail, 
            gpsX, gpsY, subTitle, price, contents1, contents2, url, phone, imgUrl, placeUrl, placeAddr, cultureLike, startDate, endDate, title, area
        FROM culture_perf        
        	<where>			
			<!-- 시작일 -->
			<if test="startDate != null">
				(startDate=#{startDate} OR startDate &gt; #{startDate})
			</if>
			<!-- 종료일 -->
			<if test="endDate != null">
				AND (endDate=#{endDate} OR endDate &lt; #{endDate})
			</if>
			<!-- 지역 -->
			<if test="area != '' and area != null">
				area=#{area}
			</if>
			<!-- 분류 -->
			<if test="realmName != '' and realmName != null">
				realmName=#{realmName}
			</if>
			
			<!-- 제목 | 내용 -->
			<if test="title != null or contents1 != null">
				<!-- 제목 검색 -->
				<if test="title != null">
					AND trim(replace(title,' ','')) like replace(concat('%', #{title}, '%'),' ','')
				</if>
				<!-- 제목|내용 검색 -->
				<if test="contents1 != null">
					OR replace(contents1,' ','') like replace(concat('%', #{contents1}, '%'),' ','')
				</if>
			</if>
			
			<!-- 장소 검색-->
			<if test="place != null and place != ''">
				AND replace(place,' ','') like replace(concat('%', #{place}, '%'),' ','')
			</if>
		</where>
		ORDER BY seq desc
        LIMIT #{limitStart}, #{listCount}
    </select>
    
    <!-- 문화 공연 아이템 목록 조회 -->
    
    <select id="selectCulturePerformanceItem" parameterType="project.spring.travel.model.CulturePerformance"
    resultMap="culturePerformance">
    	SELECT 
    		cultureId, seq, startDate, endDate, title, place, realmName, area, thumbnail, 
            gpsX, gpsY, subTitle, price, contents1, contents2, url, phone, imgUrl, placeUrl, placeAddr, cultureLike
        FROM culture_perf
        WHERE seq=#{seq} OR cultureId=#{cultureId}
    </select>
    
     <!-- 문화 공연 아이템 처음과 끝 조회 -->
    
    <select id="selectCulturePerformanceItemFL" parameterType="project.spring.travel.model.CulturePerformance"
    resultMap="culturePerformance">
    	SELECT 
    		cultureId, seq, startDate, endDate, title, place, realmName, area, thumbnail, 
            gpsX, gpsY, subTitle, price, contents1, contents2, url, phone, imgUrl, placeUrl, placeAddr, cultureLike
        FROM culture_perf
        LIMIT #{limitStart}, #{listCount}
    </select>
    
    <!-- 공연 문화 좋아요 증가 업데이트  -->
    <update id="updateCulturePerfByLikeUp"
        parameterType="project.spring.travel.model.CulturePerformance">
        UPDATE culture_perf 
        SET 
            cultureLike = cultureLike + 1 
        WHERE seq = #{seq}
    </update>
    
    <!-- 공연 문화 좋아요 증가 업데이트  -->
    <update id="updateCulturePerfByLikeDown"
        parameterType="project.spring.travel.model.CulturePerformance">
        UPDATE culture_perf 
        SET 
            cultureLike = cultureLike - 1 
        WHERE seq = #{seq}
    </update>
    
    <!-- 공연 문화 좋아요 조회 -->
    <select id="selectCultureCount" parameterType="project.spring.travel.model.CulturePerformance" 
    	resultMap="culturePerformance">
    SELECT seq, cultureLike
    FROM culture_perf
    WHERE seq =#{seq}
    
    </select>
    
    
    
    
    
    
    <!-- 문화 공연 목록 수 조회(페이지 구현용)  -->
    <select id="countCulturePerformanceList" parameterType="project.spring.travel.model.CulturePerformance"
    resultType="int">
    	SELECT 
    		count(seq)
        FROM culture_perf
        <where>			
			<!-- 시작일 -->
			<if test="startDate != null">
				(startDate=#{startDate} OR startDate &gt; #{startDate})
			</if>
			<!-- 종료일 -->
			<if test="endDate != null">
				AND (endDate=#{endDate} OR endDate &lt; #{endDate})
			</if>
			<!-- 지역 -->
			<if test="area != '' and area != null">
				area=#{area}
			</if>
			
			<!-- 분류 -->
			<if test="realmName != '' and realmName != null">
				realmName=#{realmName}
			</if>
			
			
			<!-- 제목 | 내용에 대한 검색  -->
			<if test="title != null or contents1 != null">
				<!-- 제목 검색 결과 총 개수 -->
				<if test="title != null">
					AND trim(replace(title,' ','')) like replace(concat('%', #{title}, '%'),' ','')
				</if>
				<!-- 제목|내용 검색 결과 총 개수 -->
				<if test="contents1 != null">
					OR replace(contents1,' ','') like replace(concat('%', #{contents1}, '%'),' ','')
				</if>
			</if>
			
			<!-- 장소 검색 결과 총 개수 -->
			<if test="place != null and place != ''">
				AND replace(place,' ','') like replace(concat('%', #{place}, '%'),' ','')
			</if>
		</where>        
    </select>
    
   
    
</mapper>  
