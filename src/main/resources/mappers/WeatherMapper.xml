<?xml version = "1.0" encoding = "UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    @fileName    : WeatherMapper.xml
    @author      : 김민석
    @description : 날씨 테이블에 대한 SQL문을 정의하기 위한 Mapper 정의
    @lastUpdate  : 2019-05-10
-->

<!-- 이 XML의 구조대로 구현될 클래스의 이름 => Impl클래스를 대체한다. -->
<mapper namespace = "WeatherMapper">
    <!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
    <resultMap id = "weather" type = "project.spring.travel.model.Weather">
		<result property="weather_id" column="weather_id"/>
		<result property="temp" column="temp"/>           
		<result property="humidity" column="humidity"/>   
		<result property="temp_min" column="temp_min"/>    
		<result property="temp_max" column="temp_max"/>
		<result property="minTemp" column="minTemp"/>    
		<result property="maxTemp" column="maxTemp"/>        
		<result property="speed" column="speed"/>         
		<result property="icon" column="icon"/>           
		<result property="dt_txt" column="dt_txt"/>     
		<result property="query" column="query"/>     
    </resultMap>

    <!-- ===== 날씨 정보 저장 -->
    <insert id = "insertWeather"
            parameterType = "project.spring.travel.model.Weather"
            useGeneratedKeys = "true"
            keyProperty = "weather_id">
        <!-- "#{변수명}" 으로 표시된 곳에 Beans의 멤버변수가 치환된다. -->
        INSERT INTO weather (
        	temp, humidity, temp_min, temp_max, speed, icon, dt_txt, query
       	) VALUES (
       		#{temp}, #{humidity}, #{temp_min}, #{temp_max}, #{speed}, #{icon}, #{dt_txt}, #{query}
        )
    </insert>
    
    <select id = "selectWeather"
        parameterType = "project.spring.travel.model.Weather"
        resultMap = "weather">
        <!-- "#{변수명}" 으로 표시된 곳에 멤버변수가 치환된다. -->
        SELECT weather_id, temp, humidity, temp_min, temp_max, speed, icon, dt_txt, query
        FROM weather
        Where query = #{query} And dt_txt &gt;= Date_add(now(), Interval -3 hour) And dt_txt &lt;= now()
        Order By dt_txt Desc 
        Limit 0, 1
    </select>
    
    <!-- ===== 날씨 정보 목록 조회 ===== -->
    <select id = "selectWeatherList"
            parameterType = "project.spring.travel.model.Weather"
            resultMap = "weather">
        <!-- "#{변수명}" 으로 표시된 곳에 멤버변수가 치환된다. -->
        SELECT weather_id, temp, humidity, temp_min, temp_max, speed, icon, dt_txt, query
        FROM weather 
        Where query = #{query} And dt_txt &gt;= now() And dt_txt &lt;= Date_add(now(), Interval +2 day)
    </select>
    
    <select id = "selectWeatherListMaxMin"
            parameterType = "project.spring.travel.model.Weather"
            resultMap = "weather">
        <!-- "#{변수명}" 으로 표시된 곳에 멤버변수가 치환된다. -->
        SELECT Max(temp) maxTemp, Min(temp) minTemp, substring(dt_txt, 1, 10) `dt_txt`
        FROM weather
        Where query = #{query} And substring(dt_txt, 1, 10) = substring(now(), 1, 10)
    </select> 
    
    <delete id = "deleteWeather"
        parameterType = "project.spring.travel.model.Weather">
        <!-- "#{변수명}" 으로 표시된 곳에 Beans의 멤버변수가 치환된다. -->
        Delete From weather
    </delete>
    
</mapper>